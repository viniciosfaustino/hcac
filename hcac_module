import numpy as np
from dataset_module import Dataset
from cluster_module import Cluster

class HCAC():
    def __init__(self, _pool_size:int, _max_user_intervention:int, _dataset:Dataset,
                 _distance_function:str="euclidean", _linkage_method:str='avg',
                 _is_validation:bool=True):

        self.pool_size = _pool_size
        self.max_user_intervention = _max_user_intervention
        self.dataset = _dataset
        self.distance_function = _distance_function
        self.linkage_method = _linkage_method
        self.is_validation = _is_validation

        self.cluster = Cluster(self.dataset.size)

        self.confidence_array = self.get_confidence()
        self.threshold = self.get_threshold()

    def get_confidence(self):
        return np.ndarray

    def get_threshold(self):
        return float

    def do_clustering(self):
        pass

    def update_distance_matrix(self, index_a:int, index_b:int):
        pass

    def create_pool(self, index:int):
        return list

    def get_entropy(self):
        return list

    def select_merge(self, pool:list):
        return int

